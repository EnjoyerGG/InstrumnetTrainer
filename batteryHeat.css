
/* batteryHeat.css — pure CSS "heat/energy" effect for the battery area
   Usage:
   1) Add a positioned overlay element inside your UI where the battery renders:
      <div id="batteryHeat" class="battery-heat"></div>
      (Give it left/top/width/height via inline style or parent layout.)
   2) When the gameplay condition triggers (e.g., 5 consecutive 3-star combos),
      toggle the class .is-hot on this element to start/stop the effect.
*/

.battery-heat{
  --heat: 0;                 /* 0–1 visual intensity */
  position: absolute;
  pointer-events: none;
  opacity: 0;
  transition: opacity .18s ease;
  mix-blend-mode: screen;    /* brightens underlying UI */
  border-radius: 10px;
  overflow: hidden;
  z-index: 20;               /* above background, below foreground controls */
}

/* Show + intensify when active */
.battery-heat.is-hot{ opacity: 1; --heat: 1; }

/* Flowing glow layer */
.battery-heat::before{
  content: "";
  position: absolute; inset: 0;
  background:
    radial-gradient(90% 140% at 50% 120%, rgba(255,125,35,.35), transparent 60%),
    radial-gradient(70% 100% at 25% 110%, rgba(255,80,40,.28),  transparent 70%),
    radial-gradient(70% 100% at 75% 110%, rgba(255,210,60,.25), transparent 70%);
  filter: blur(12px) saturate(1.2);
  transform: translateZ(0);
  opacity: calc(.85 * var(--heat));
  animation: battery-heat-flow 2.6s linear infinite paused;
}

.battery-heat.is-hot::before{ animation-play-state: running; }

@keyframes battery-heat-flow{
  0%   { background-position: 0 0, 0 0, 0 0; }
  100% { background-position: 0 -60%, 0 -80%, 0 -70%; }
}

/* Rising bubbles layer (made with multiple radial-gradients, no extra DOM) */
.battery-heat::after{
  content: "";
  position: absolute; inset: 0;
  background:
    radial-gradient(10px 10px at 6% 110%,  rgba(255,240,210,.90) 20%, rgba(255,150,60,.65) 60%, transparent 72%),
    radial-gradient(9px  9px  at 18% 118%, rgba(255,230,200,.90) 20%, rgba(255,130,50,.60) 60%, transparent 72%),
    radial-gradient(8px  8px  at 30% 115%, rgba(255,240,210,.90) 20%, rgba(255,160,70,.60) 60%, transparent 72%),
    radial-gradient(11px 11px at 42% 112%, rgba(255,235,200,.90) 20%, rgba(255,140,60,.60) 60%, transparent 72%),
    radial-gradient(8px  8px  at 54% 120%, rgba(255,240,210,.90) 20%, rgba(255,160,70,.60) 60%, transparent 72%),
    radial-gradient(10px 10px at 66% 116%, rgba(255,240,210,.90) 20%, rgba(255,150,60,.60) 60%, transparent 72%),
    radial-gradient(9px  9px  at 78% 114%, rgba(255,240,210,.90) 20%, rgba(255,160,70,.60) 60%, transparent 72%),
    radial-gradient(8px  8px  at 90% 118%, rgba(255,230,200,.90) 20%, rgba(255,130,50,.60) 60%, transparent 72%);
  background-repeat: no-repeat;
  opacity: calc(.95 * var(--heat));
  filter: blur(.5px) contrast(1.1);
  animation:
    battery-bubbles-rise 3.2s linear infinite paused,
    battery-bubbles-flicker 1.6s ease-in-out infinite alternate paused;
}

.battery-heat.is-hot::after{
  animation-play-state: running, running;
}

@keyframes battery-bubbles-rise{
  to{
    background-position:
      6% -15%, 18% -22%, 30% -18%, 42% -16%,
      54% -24%, 66% -20%, 78% -18%, 90% -22%;
  }
}

@keyframes battery-bubbles-flicker{
  0%   { transform: translateY(0);    }
  100% { transform: translateY(-2%);  }
}

/* Optional extra: pulsing edge glow for the container itself */
@keyframes battery-heat-pulse{
  0%,100%{ box-shadow: 0 0 0 rgba(255,120,40,0); }
  50%    { box-shadow: 0 0 24px rgba(255,150,60,.45), inset 0 0 18px rgba(255,110,30,.35); }
}

.battery-heat.is-hot{ animation: battery-heat-pulse 1.8s ease-in-out infinite; }
